{"ast":null,"code":"import _asyncToGenerator from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/julia/Desktop/calendar/src/components/excelPage.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Icon, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport { EditableFormRow, EditableCell } from \"../utils/editable\";\n\nvar ExcelPage = /*#__PURE__*/function (_Component) {\n  _inherits(ExcelPage, _Component);\n\n  var _super = _createSuper(ExcelPage);\n\n  function ExcelPage(props) {\n    var _this;\n\n    _classCallCheck(this, ExcelPage);\n\n    _this = _super.call(this, props);\n\n    _this.handleSave = function (row) {\n      var newData = _toConsumableArray(_this.state.rows);\n\n      var index = newData.findIndex(function (item) {\n        return row.key === item.key;\n      });\n      var item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n\n      _this.setState({\n        rows: newData\n      });\n    };\n\n    _this.fileHandler = function (fileList) {\n      console.log(\"fileList\", fileList);\n      var fileObj = fileList;\n\n      if (!fileObj) {\n        _this.setState({\n          errorMessage: \"No file uploaded!\"\n        });\n\n        return false;\n      }\n\n      console.log(\"fileObj.type:\", fileObj.type);\n\n      if (!(fileObj.type === \"application/vnd.ms-excel\" || fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")) {\n        _this.setState({\n          errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n        });\n\n        return false;\n      } //just pass the fileObj as parameter\n\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          var newRows = [];\n          resp.rows.slice(1).map(function (row, index) {\n            if (row && row !== \"undefined\") {\n              newRows.push({\n                key: index,\n                name: row[0],\n                age: row[1],\n                gender: row[2]\n              });\n            }\n          });\n\n          if (newRows.length === 0) {\n            _this.setState({\n              errorMessage: \"No data found in file!\"\n            });\n\n            return false;\n          } else {\n            _this.setState({\n              cols: resp.cols,\n              rows: newRows,\n              errorMessage: null\n            });\n          }\n        }\n      });\n      return false;\n    };\n\n    _this.handleSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"submitting: \", _this.state.rows); //submit to API\n              //if successful, banigate and clear the data\n              //this.setState({ rows: [] })\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleDelete = function (key) {\n      var rows = _toConsumableArray(_this.state.rows);\n\n      _this.setState({\n        rows: rows.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n    };\n\n    _this.handleAdd = function () {\n      var _this$state = _this.state,\n          count = _this$state.count,\n          rows = _this$state.rows;\n      var newData = {\n        key: count,\n        name: \"User's name\",\n        age: \"22\",\n        gender: \"Female\"\n      };\n\n      _this.setState({\n        rows: [newData].concat(_toConsumableArray(rows)),\n        count: count + 1\n      });\n    };\n\n    _this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      columns: [{\n        title: \"NAME\",\n        dataIndex: \"name\",\n        editable: true\n      }, {\n        title: \"AGE\",\n        dataIndex: \"age\",\n        editable: true\n      }, {\n        title: \"GENDER\",\n        dataIndex: \"gender\",\n        editable: true\n      }, {\n        title: \"Action\",\n        dataIndex: \"action\",\n        render: function render(text, record) {\n          return _this.state.rows.length >= 1 ? /*#__PURE__*/React.createElement(Popconfirm, {\n            title: \"Sure to delete?\",\n            onConfirm: function onConfirm() {\n              return _this.handleDelete(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            type: \"delete\",\n            theme: \"filled\",\n            style: {\n              color: \"red\",\n              fontSize: \"20px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }\n          })) : null;\n        }\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ExcelPage, [{\n    key: \"checkFile\",\n    value: function checkFile(file) {\n      var errorMessage = \"\";\n\n      if (!file || !file[0]) {\n        return;\n      }\n\n      var isExcel = file[0].type === \"application/vnd.ms-excel\" || file[0].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\n      if (!isExcel) {\n        errorMessage = \"You can only upload Excel file!\";\n      }\n\n      console.log(\"file\", file[0].type);\n      var isLt2M = file[0].size / 1024 / 1024 < 2;\n\n      if (!isLt2M) {\n        errorMessage = \"File must be smaller than 2MB!\";\n      }\n\n      console.log(\"errorMessage\", errorMessage);\n      return errorMessage;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell\n        }\n      };\n      var columns = this.state.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSave\n            };\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, \"Importing Excel Component\"), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"5%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, \"Upload User Data\"))), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://res.cloudinary.com/bryta/raw/upload/v1562751445/Sample_Excel_Sheet_muxx6s.xlsx\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        download: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, \"Sample excel sheet\")), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        align: \"right\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, this.state.rows.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleAdd,\n        size: \"large\",\n        type: \"info\",\n        style: {\n          marginBottom: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 19\n        }\n      }), \"Add a row\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleSubmit,\n        size: \"large\",\n        type: \"primary\",\n        style: {\n          marginBottom: 16,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, \"Submit Data\")))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Upload, {\n        name: \"file\",\n        beforeUpload: this.fileHandler,\n        onRemove: function onRemove() {\n          return _this2.setState({\n            rows: []\n          });\n        },\n        multiple: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }\n      }), \" Click to Upload Excel File\"))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        components: components,\n        rowClassName: function rowClassName() {\n          return \"editable-row\";\n        },\n        dataSource: this.state.rows,\n        columns: columns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ExcelPage;\n}(Component);\n\nexport { ExcelPage as default };","map":{"version":3,"names":["React","Component","Table","Button","Popconfirm","Row","Col","Icon","Upload","ExcelRenderer","EditableFormRow","EditableCell","ExcelPage","props","handleSave","row","newData","state","rows","index","findIndex","item","key","splice","setState","fileHandler","fileList","console","log","fileObj","errorMessage","type","err","resp","newRows","slice","map","push","name","age","gender","length","cols","handleSubmit","handleDelete","filter","handleAdd","count","columns","title","dataIndex","editable","render","text","record","color","fontSize","file","isExcel","isLt2M","size","components","body","cell","col","onCell","display","justifyContent","alignItems","marginBottom","marginLeft","marginTop"],"sources":["/home/julia/Desktop/calendar/src/components/excelPage.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Icon, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport { EditableFormRow, EditableCell } from \"../utils/editable\";\n\nexport default class ExcelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      columns: [\n        {\n          title: \"NAME\",\n          dataIndex: \"name\",\n          editable: true\n        },\n        {\n          title: \"AGE\",\n          dataIndex: \"age\",\n          editable: true\n        },\n        {\n          title: \"GENDER\",\n          dataIndex: \"gender\",\n          editable: true\n        },\n        {\n          title: \"Action\",\n          dataIndex: \"action\",\n          render: (text, record) =>\n            this.state.rows.length >= 1 ? (\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => this.handleDelete(record.key)}\n              >\n                <Icon\n                  type=\"delete\"\n                  theme=\"filled\"\n                  style={{ color: \"red\", fontSize: \"20px\" }}\n                />\n              </Popconfirm>\n            ) : null\n        }\n      ]\n    };\n  }\n\n  handleSave = row => {\n    const newData = [...this.state.rows];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    this.setState({ rows: newData });\n  };\n\n  checkFile(file) {\n    let errorMessage = \"\";\n    if (!file || !file[0]) {\n      return;\n    }\n    const isExcel =\n      file[0].type === \"application/vnd.ms-excel\" ||\n      file[0].type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n  fileHandler = fileList => {\n    console.log(\"fileList\", fileList);\n    let fileObj = fileList;\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\"\n      });\n      return false;\n    }\n    console.log(\"fileObj.type:\", fileObj.type);\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n      });\n      return false;\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        let newRows = [];\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            newRows.push({\n              key: index,\n              name: row[0],\n              age: row[1],\n              gender: row[2]\n            });\n          }\n        });\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\"\n          });\n          return false;\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null\n          });\n        }\n      }\n    });\n    return false;\n  };\n\n  handleSubmit = async () => {\n    console.log(\"submitting: \", this.state.rows);\n    //submit to API\n    //if successful, banigate and clear the data\n    //this.setState({ rows: [] })\n  };\n\n  handleDelete = key => {\n    const rows = [...this.state.rows];\n    this.setState({ rows: rows.filter(item => item.key !== key) });\n  };\n  handleAdd = () => {\n    const { count, rows } = this.state;\n    const newData = {\n      key: count,\n      name: \"User's name\",\n      age: \"22\",\n      gender: \"Female\"\n    };\n    this.setState({\n      rows: [newData, ...rows],\n      count: count + 1\n    });\n  };\n\n  render() {\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.state.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <>\n        <h1>Importing Excel Component</h1>\n        <Row gutter={16}>\n          <Col\n            span={8}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"5%\"\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div className=\"page-title\">Upload User Data</div>\n            </div>\n          </Col>\n          <Col span={8}>\n            <a\n              href=\"https://res.cloudinary.com/bryta/raw/upload/v1562751445/Sample_Excel_Sheet_muxx6s.xlsx\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              download\n            >\n              Sample excel sheet\n            </a>\n          </Col>\n          <Col\n            span={8}\n            align=\"right\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            {this.state.rows.length > 0 && (\n              <>\n                <Button\n                  onClick={this.handleAdd}\n                  size=\"large\"\n                  type=\"info\"\n                  style={{ marginBottom: 16 }}\n                >\n                  <Icon type=\"plus\" />\n                  Add a row\n                </Button>{\" \"}\n                <Button\n                  onClick={this.handleSubmit}\n                  size=\"large\"\n                  type=\"primary\"\n                  style={{ marginBottom: 16, marginLeft: 10 }}\n                >\n                  Submit Data\n                </Button>\n              </>\n            )}\n          </Col>\n        </Row>\n        <div>\n          <Upload\n            name=\"file\"\n            beforeUpload={this.fileHandler}\n            onRemove={() => this.setState({ rows: [] })}\n            multiple={false}\n          >\n            <Button>\n              <Icon type=\"upload\" /> Click to Upload Excel File\n            </Button>\n          </Upload>\n        </div>\n        <div style={{ marginTop: 20 }}>\n          <Table\n            components={components}\n            rowClassName={() => \"editable-row\"}\n            dataSource={this.state.rows}\n            columns={columns}\n          />\n        </div>\n      </>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}