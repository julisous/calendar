{"ast":null,"code":"import _toConsumableArray from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/julia/Desktop/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from \"redux\";\nimport dateFns from \"date-fns\";\nimport { ADD_EVENT, EDIT_EVENT, REMOVE_EVENT, SET_EVENT_MODAL_COLOR, SET_EVENT_MODAL_DAY, SET_EVENT_MODAL_HOUR, SET_EVENT_MODAL_ID, SET_EVENT_MODAL_TITLE, SET_NEXT_MONTH, SET_PREV_MONTH, SET_CURRENT_MONTH, TOGGLE_EVENT_MODAL } from \"./actions\";\n\nvar eventModalReducer = function eventModalReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    color: \"blue\",\n    day: new Date(),\n    hour: null,\n    id: null,\n    open: false,\n    title: \"\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_EVENT_MODAL_COLOR:\n      return _objectSpread({}, state, {\n        color: action.payload\n      });\n\n    case SET_EVENT_MODAL_DAY:\n      return _objectSpread({}, state, {\n        day: action.payload\n      });\n\n    case SET_EVENT_MODAL_HOUR:\n      return _objectSpread({}, state, {\n        hour: action.payload\n      });\n\n    case SET_EVENT_MODAL_ID:\n      return _objectSpread({}, state, {\n        id: action.payload\n      });\n\n    case SET_EVENT_MODAL_TITLE:\n      return _objectSpread({}, state, {\n        title: action.payload\n      });\n\n    case TOGGLE_EVENT_MODAL:\n      return _objectSpread({}, state, {\n        open: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar eventsReducer = function eventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EVENT:\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case EDIT_EVENT:\n      return state.map(function (event) {\n        return event.id === action.payload.id ? action.payload : event;\n      });\n\n    case REMOVE_EVENT:\n      return state.filter(function (event) {\n        return event.id !== action.payload;\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar monthsReducer = function monthsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    currentMonth: new Date()\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CURRENT_MONTH:\n      return {\n        currentMonth: new Date()\n      };\n\n    case SET_NEXT_MONTH:\n      return {\n        currentMonth: dateFns.addMonths(state.currentMonth, 1)\n      };\n\n    case SET_PREV_MONTH:\n      return {\n        currentMonth: dateFns.subMonths(state.currentMonth, 1)\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  eventModal: eventModalReducer,\n  events: eventsReducer,\n  months: monthsReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","dateFns","ADD_EVENT","EDIT_EVENT","REMOVE_EVENT","SET_EVENT_MODAL_COLOR","SET_EVENT_MODAL_DAY","SET_EVENT_MODAL_HOUR","SET_EVENT_MODAL_ID","SET_EVENT_MODAL_TITLE","SET_NEXT_MONTH","SET_PREV_MONTH","SET_CURRENT_MONTH","TOGGLE_EVENT_MODAL","eventModalReducer","state","color","day","Date","hour","id","open","title","action","type","payload","eventsReducer","map","event","filter","monthsReducer","currentMonth","addMonths","subMonths","rootReducer","eventModal","events","months"],"sources":["/home/julia/Desktop/calendar/src/store/reducers.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport dateFns from \"date-fns\";\n\nimport {\n  ADD_EVENT,\n  EDIT_EVENT,\n  REMOVE_EVENT,\n  SET_EVENT_MODAL_COLOR,\n  SET_EVENT_MODAL_DAY,\n  SET_EVENT_MODAL_HOUR,\n  SET_EVENT_MODAL_ID,\n  SET_EVENT_MODAL_TITLE,\n  SET_NEXT_MONTH,\n  SET_PREV_MONTH,\n  SET_CURRENT_MONTH,\n  TOGGLE_EVENT_MODAL\n} from \"./actions\";\n\nconst eventModalReducer = (\n  state = {\n    color: \"blue\",\n    day: new Date(),\n    hour: null,\n    id: null,\n    open: false,\n    title: \"\"\n  },\n  action\n) => {\n  switch (action.type) {\n    case SET_EVENT_MODAL_COLOR:\n      return {\n        ...state,\n        color: action.payload\n      };\n    case SET_EVENT_MODAL_DAY:\n      return {\n        ...state,\n        day: action.payload\n      };\n    case SET_EVENT_MODAL_HOUR:\n      return {\n        ...state,\n        hour: action.payload\n      };\n    case SET_EVENT_MODAL_ID:\n      return {\n        ...state,\n        id: action.payload\n      };\n    case SET_EVENT_MODAL_TITLE:\n      return {\n        ...state,\n        title: action.payload\n      };\n    case TOGGLE_EVENT_MODAL:\n      return {\n        ...state,\n        open: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst eventsReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_EVENT:\n      return [...state, action.payload];\n    case EDIT_EVENT:\n      return state.map(event =>\n        event.id === action.payload.id ? action.payload : event\n      );\n    case REMOVE_EVENT:\n      return state.filter(event => event.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nconst monthsReducer = (\n  state = {\n    currentMonth: new Date()\n  },\n  action\n) => {\n  switch (action.type) {\n    case SET_CURRENT_MONTH:\n      return {\n        currentMonth: new Date()\n      };\n    case SET_NEXT_MONTH:\n      return {\n        currentMonth: dateFns.addMonths(state.currentMonth, 1)\n      };\n    case SET_PREV_MONTH:\n      return {\n        currentMonth: dateFns.subMonths(state.currentMonth, 1)\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  eventModal: eventModalReducer,\n  events: eventsReducer,\n  months: monthsReducer\n});\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}